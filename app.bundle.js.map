{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/earth/index.js","webpack:///./src/utils/index.js","webpack:///./src/components/Earth.js","webpack:///./src/utils/api.js","webpack:///./config/config.js","webpack:///./src/utils/blankerl/index.js","webpack:///./src/app.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","excpetionMap","exceptoinMapForData","getTooltipContent","propertyName","targetName","toLowerCase","dataEntity","countriesMap","confirmed","num","toString","replace","e","formatNumber","console","log","stageColorMap","1","2","3","4","5","6","Container","styled","div","SVG","svg","ToolTip","memo","Earth","containerNode","gNode","tooltipNode","cleanCanvas","d3","selectAll","remove","drawEarth","clientWidth","clientHeight","style","height","scaleValue","projection","translate","scale","clipAngle","precision","rotate","path","d3SelectedG","d3SelectedTooltip","graticule","step","allCountries","topojson","countries","objects","features","append","datum","attr","enter","count","getConfirmedCount","properties","on","this","html","positionX","clientX","positionY","clientY","tooltipRect","getBoundingClientRect","width","innerWidth","v0","r0","q0","angles","drag","mousePosition","versor","cartesian","invert","insert","type","coordinates","eulerAngles","v1","q1","multiply","delta","r1","rotation","forEach","angle","index","Math","round","useEffect","ref","node","coronavirusAPIOrigin","coronavirusAPIPath","asyncResolver","promise","res","error","response","json","fetch","results","fetchCoronavirusAreaData","fetchChianOverallData","fetchLatestDate","extractData","fns","intialState","reduce","acc","fn","pipe","filter","entity","countryEnglishName","Array","isArray","latestUpdatedTimeStamp","updateTime","provincesData","citiesData","province","tmpCities","exceptionIndex","cityIds","cities","city","locationId","provinces","Section","h1","MapContainer","App","props","state","coronavirusDataPrefecturalLevel","coronavirusCountryLevel","latestData","API","countryRes","confirmedCount","deadCount","curedCount","setState","_latestDataProcessor","map","country","ename","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([198,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { formatNumber } from '../index';\nimport countriesMap from '../../data/countries-em-map.json';\n\nconst excpetionMap = {\n  'United States of America': 'us',\n  'S. Sudan': 'south sudan',\n  'Burma': 'myanmar',\n  'Taiwan': 'taiwan*',\n  'Dem. Rep. Congo': 'congo (kinshasa)',\n  'Congo': 'congo (brazzaville)',\n  \"Côte d'Ivoire\": \"cote d'ivoire\",\n  'Central African Rep.': 'central african republic',\n  'Bosnia and Herz.': 'bosnia and herzegovina',\n  'Macedonia': 'north macedonia',\n  'Eq. Guinea': 'equatorial guinea',\n  'Dominican Rep.': 'dominican republic',\n};\n\nconst exceptoinMapForData = {\n  'south korea': 'korea, south',\n  'myanmar': 'burma',\n};\n\nconst getTooltipContent = ({\n  data,\n  propertyName,\n}) => {\n  if (data) {\n    const targetName = excpetionMap[propertyName] || propertyName.toLowerCase();\n    const dataEntity = data[exceptoinMapForData[targetName] || targetName];\n    const name = countriesMap[targetName] || targetName;\n    const confirmed = dataEntity ? formatNumber(dataEntity.confirmed) : 0;\n    if (!name) {\n      console.log('propertyName: ', propertyName)\n    }\n    if (!dataEntity) {\n      console.log('propertyName: ', propertyName)\n      console.log('targetName: ', targetName)\n    }\n    return {\n      name: name || propertyName,\n      confirmed,\n    };\n  }\n  const targetName = excpetionMap[propertyName] || propertyName.toLowerCase();\n  const name = countriesMap[targetName];\n  return {\n    name: name || propertyName,\n    confirmed: 'N/A',\n  };\n};\n\nconst getConfirmedCount = ({\n  data,\n  propertyName,\n}) => {\n  if (data) {\n    const targetName = excpetionMap[propertyName] || propertyName.toLowerCase();\n    const dataEntity = data[exceptoinMapForData[targetName] || targetName];\n    return dataEntity ? dataEntity.confirmed : null;\n  }\n  return 0;\n};\n\nexport {\n  getTooltipContent,\n  getConfirmedCount,\n};\n","function formatNumber(num) {\n  try {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  } catch (e) {\n    return 0;\n  }\n}\n\nfunction throttle(fn, interval) {\n  let lastExecutedTime = null;\n  let dormnatInterval = null;\n  return function decorator(...args) {\n    if (lastExecutedTime) {\n      dormnatInterval = Date.now() - lastExecutedTime;\n    }\n    if (!lastExecutedTime || (lastExecutedTime && (dormnatInterval >= interval))) {\n      fn.apply(this, args);\n      lastExecutedTime = Date.now();\n    }\n  };\n}\n\nexport {\n  formatNumber,\n  throttle,\n};\n","import React, { useEffect, memo, useState } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\nimport versor from 'versor';\nimport countries from '../data/countries.json';\nimport { formatNumber } from '../utils';\nimport { getTooltipContent, getConfirmedCount } from '../utils/earth';\n\n\nconst scaleRatio = 0.5;\n\nconst DEFAULT_MAP_COLOR = '#DADADA';\n\n// const mapLegends = ['0', '1 - 50', '51 - 500', '500 +', '3,000 +', '6,000 +', '80,000 +'];\n\nconst stageColorMap = {\n  0: DEFAULT_MAP_COLOR,\n  1: '#F4E2EE',\n  2: '#DBAAC9',\n  3: '#963671',\n  4: '#CD4266',\n  5: '#D01645',\n  6: '#7B0221',\n};\n\nconst getInfectedStageFromCount = (count) => {\n  if (count === 0 || !count) {\n    return 0;\n  }\n  if (count >= 1 && count <= 50) {\n    return 1;\n  }\n  if (count >= 51 && count <= 500) {\n    return 2;\n  }\n  if (count >= 501 && count <= 3000) {\n    return 3;\n  }\n  if (count >= 3001 && count <= 6000) {\n    return 4;\n  }\n  if (count >= 6001 && count <= 80000) {\n    return 5;\n  }\n  if (count > 80000) {\n    return 6;\n  }\n  return 0;\n};\n\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  background-color: #2B2828;\n`;\n\nconst SVG = styled.svg`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ToolTip = styled.div`\n  color: #222;\n  background: #fff;\n  border-radius: 3px;\n  box-shadow: 0px 0px 2px 0px #a6a6a6;\n  padding: .5em;\n  text-shadow: #f5f5f5 0 1px 0;\n  opacity: 0.9;\n  position: fixed;\n  display: none;\n`;\n\n\nfunction Earth({\n  data,\n}) {\n  let containerNode = null;\n  let svgNode = null;\n  let gNode = null;\n  let tooltipNode = null;\n  function cleanCanvas() {\n    d3\n      .select(gNode)\n      .selectAll('path')\n      .remove();\n  }\n  function drawEarth() {\n    const { clientWidth } = containerNode;\n    const clientHeight = clientWidth;\n    containerNode.style.height = `${clientHeight}px`;\n    const scaleValue = clientWidth * scaleRatio;\n    const projection = d3\n      .geoOrthographic()\n      .translate([clientWidth / 2, clientHeight / 2])\n      .scale(scaleValue)\n      .clipAngle(90 + 1e-6)\n      .precision(1)\n      .rotate([-120, -20]);\n    const path = d3.geoPath(projection);\n    const d3SelectedG = d3.select(gNode);\n    const d3SelectedTooltip = d3.select(tooltipNode);\n    const graticule = d3.geoGraticule()\n      .step([10, 10]);\n    const allCountries = topojson.feature(countries, countries.objects.countries).features;\n\n    d3SelectedG\n      .append('path')\n      .datum(graticule)\n      .attr('class', 'graticule')\n      .attr('d', path)\n      .style('fill', '#2B2828')\n      .style('stroke', 'white')\n      .style('stroke-dasharray', ('1', '1'))\n      .attr('stroke-width', 0.2);\n\n    d3SelectedG\n      .selectAll('.subunit')\n      .data(allCountries)\n      .enter()\n      .append('path')\n      .attr('class', 'subunit')\n      .attr('d', path)\n      .attr('fill', (d) => stageColorMap[getInfectedStageFromCount(getConfirmedCount({ data, propertyName: d.properties.name }))])\n      .attr('stroke', 'white')\n      .attr('stroke-width', 0.5)\n      .on('mouseover', function (d) {\n        const {\n          name,\n          confirmed,\n        } = getTooltipContent({\n          data,\n          propertyName: d.properties.name,\n        });\n        d3\n          .select(this)\n          .attr('stroke-width', 1);\n        d3SelectedTooltip.style('display', 'block').html(`\n          <div>\n            <div>${name}</div>\n            <div>\n              確診：${confirmed}\n            </div>\n          </div>\n        `);\n      })\n      .on('mousemove', (d) => {\n        const {\n          name,\n          confirmed,\n        } = getTooltipContent({\n          data,\n          propertyName: d.properties.name,\n        });\n        let positionX = d3.event.clientX + 10;\n        const positionY = d3.event.clientY;\n        const tooltipRect = tooltipNode.getBoundingClientRect();\n        if ((positionX + tooltipRect.width) > window.innerWidth) {\n          positionX = d3.event.clientX - tooltipRect.width - 10;\n        }\n        d3SelectedTooltip\n          .style('top', `${positionY}px`)\n          .style('left', `${positionX}px`)\n          .html(`\n            <div>\n              <div>${name}</div>\n              <div>\n                確診：${confirmed}\n              </div>\n            </div>\n          `);\n      })\n      .on('mouseout', function () {\n        d3\n          .select(this)\n          .attr('stroke-width', 0.5);\n        d3SelectedTooltip.style('display', 'none');\n      });\n\n    let v0 = null;\n    let r0 = null;\n    let q0 = null;\n\n    const angles = [\"λ\", \"φ\", \"γ\"];\n    function update(eulerAngles){\n      angles.forEach(function(angle, index){\n        d3.select(\".angle-label-\" + index + \" span\").html(Math.round(eulerAngles[index]))\n        d3.select(\".angle-\" + index).property(\"value\", eulerAngles[index])\n      });\n      projection.rotate(eulerAngles);\n    }\n\n\n    function dragstarted() {\n      const mousePosition = d3.mouse(this);\n      v0 = versor.cartesian(projection.invert(mousePosition));\n      r0 = projection.rotate();\n      q0 = versor(r0);\n      d3SelectedG\n        .insert('path')\n        .datum({\n          type: 'Point',\n          coordinates: projection.invert(mousePosition),\n        })\n        .attr('class', 'point point-mouse')\n        .attr('d', path);\n    }\n\n    function dragged() {\n      const mousePosition = d3.mouse(this);\n      const v1 = versor.cartesian(projection.rotate(r0).invert(mousePosition));\n      const q1 = versor.multiply(q0, versor.delta(v0, v1));\n      const r1 = versor.rotation(q1);\n      if (r1) {\n        update(r1);\n        d3SelectedG\n          .selectAll('path').attr('d', path);\n        d3SelectedG\n          .selectAll('.point-mouse')\n          .datum({\n            type: 'Point',\n            coordinates: projection.invert(mousePosition)\n          });\n      }\n    }\n\n    function dragended() {\n      d3SelectedG\n        .selectAll('.point')\n        .remove();\n    }\n\n    const drag = d3.drag();\n    drag\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended);\n\n    d3SelectedG.call(drag);\n  }\n\n  useEffect(() => {\n    d3.select(window).on(`resize.${Earth.name}`, () => {\n      cleanCanvas();\n      drawEarth();\n    });\n  });\n\n  useEffect(() => {\n    cleanCanvas();\n    drawEarth();\n  }, [data]);\n  return (\n    <Container\n      ref={(node) => { containerNode = node; }}\n    >\n      <SVG\n        ref={(node) => { svgNode = node; }}\n      >\n        <g\n          ref={(node) => { gNode = node; }}\n        />\n      </SVG>\n      <ToolTip\n        ref={(node) => { tooltipNode = node; }}\n      />\n    </Container>\n  );\n}\n\nexport default memo(Earth);\n","import config from '../../config/config';\n\nconst { coronavirusAPIOrigin, coronavirusAPIPath } = config;\n\nconst asyncResolver = async (promise) => {\n  const res = {\n    data: null,\n    error: null,\n  };\n  try {\n    const response = await promise;\n    res.data = await response.json();\n    return res;\n  } catch (e) {\n    res.error = e;\n    return res;\n  }\n};\n\nasync function fetchCoronavirusAreaData() {\n  const result = await asyncResolver(fetch(`${coronavirusAPIOrigin}/${coronavirusAPIPath}/area?latest=1`));\n  return result;\n}\n\nasync function fetchChianOverallData() {\n  const result = await asyncResolver(fetch(`${coronavirusAPIOrigin}/${coronavirusAPIPath}/overall`));\n  return result.data.results[0];\n}\n\nasync function fetchLatestDate() {\n  const url = 'https://tpts-public.s3-ap-southeast-1.amazonaws.com/latest-coronavirus-stats.json';\n  const result = await asyncResolver(fetch(url));\n  if (result && !result.error) {\n    return result.data;\n  }\n  return null;\n}\n\nexport default {\n  fetchCoronavirusAreaData,\n  fetchChianOverallData,\n  fetchLatestDate,\n};\n","export default {\n  coronavirusAPIOrigin: 'https://lab.isaaclin.cn',\n  coronavirusAPIPath: 'nCoV/api',\n};\n","const filterOutNonChina = (data) => data.filter((entity) => entity.countryEnglishName === 'China');\n\nconst formatData = (data) => {\n  if (Array.isArray(data) && data.length !== 0) {\n    const latestUpdatedTime = data[0].updateTime;\n    const formatedData = {};\n    data.forEach((province) => {\n      let cities = null;\n      if (province.cities && Array.isArray(province.cities)) {\n        cities = (() => {\n          const tmpCities = {};\n          province.cities.forEach((city) => {\n            tmpCities[city.locationId] = city;\n          });\n          return tmpCities;\n        })();\n      }\n      formatedData[province.locationId] = {\n        ...province.locationId,\n        cities,\n      };\n    });\n    return {\n      latestUpdatedTime,\n      data: formatedData,\n    };\n  }\n  return null;\n};\n\nconst formatDataNormalization = (data) => {\n  if (Array.isArray(data) && data.length !== 0) {\n    const latestUpdatedTimeStamp = data[0].updateTime;\n    const provincesData = {};\n    let citiesData = {};\n    data.forEach((province) => {\n      const cityIds = [];\n      let tmpCitiesData = {};\n      if (province.cities && Array.isArray(province.cities)) {\n        tmpCitiesData = (() => {\n          const tmpCities = {};\n          let exceptionIndex = 0;\n          province.cities.forEach((city) => {\n            let { locationId } = city;\n            if (city.locationId === 0 || city.locationId === -1) {\n              locationId = `${province.locationId}/${exceptionIndex}`;\n              exceptionIndex += 1;\n            }\n            cityIds.push(locationId);\n            tmpCities[locationId] = city;\n          });\n          return tmpCities;\n        })();\n        citiesData = {\n          ...citiesData,\n          ...tmpCitiesData,\n        };\n      }\n      provincesData[province.locationId] = {\n        ...province,\n        cities: cityIds,\n      };\n    });\n    return {\n      latestUpdatedTimeStamp,\n      provinces: provincesData,\n      cities: citiesData,\n    };\n  }\n  return null;\n};\n\nconst pipe = (...fns) => (intialState) => fns.reduce((acc, fn) => fn(acc), intialState);\n\nconst extractData = pipe(filterOutNonChina, formatDataNormalization);\n\n\nexport {\n  filterOutNonChina,\n  formatData,\n  extractData,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n// import ChinaChronological from './components/ChinaChronological';\n// import PrefecturalChina from './components/PrefecturalChina';\n// import PrefecturalChinaV2 from './components/PrefecturalChinaV2';\n// import testData from './data/testData.json';\n// import coronavirus from './data/virus/coronavirus.json';\nimport Earth from './components/Earth';\nimport API from './utils/api';\nimport { extractData } from './utils/blankerl';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Header = styled.h1`\n  margin-bottom: 20px;\n`;\n\nconst Section = styled.div`\n  margin: 50px 0;\n`;\n\nconst MapContainer = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coronavirusDataPrefecturalLevel: null,\n      coronavirusCountryLevel: null,\n      latestData: null,\n    };\n  }\n\n  async componentDidMount() {\n    const res = await API.fetchCoronavirusAreaData();\n    // const data = filterOutNonChina(res.data.results);\n    const countryRes = await API.fetchChianOverallData();\n    const { confirmedCount, deadCount, curedCount } = countryRes;\n    const data = extractData(res.data.results);\n    const latestData = await API.fetchLatestDate();\n    this.setState({\n      coronavirusDataPrefecturalLevel: data,\n      coronavirusCountryLevel: {\n        confirmedCount,\n        deadCount,\n        curedCount,\n      },\n      latestData: this._latestDataProcessor(latestData.countries),\n    });\n  }\n\n  _latestDataProcessor(data) {\n    const map = {};\n    data.forEach((country) => {\n      map[country.ename] = {\n        confirmed: country.confirmed,\n        name: country.name,\n      };\n    });\n    return map;\n  }\n\n\n  render() {\n    const { coronavirusDataPrefecturalLevel, coronavirusCountryLevel, latestData } = this.state;\n    return (\n      <Container>\n        <Section>\n          <MapContainer>\n            <Earth\n              data={latestData}\n            />\n          </MapContainer>\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n\n// <Header>Map Demo 2</Header>\n// <Section>\n//   <div>資料來源：丁香醫生</div>\n//   <MapContainer>\n//     <PrefecturalChinaV2\n//       countryData={coronavirusCountryLevel}\n//       data={coronavirusDataPrefecturalLevel}\n//     />\n//   </MapContainer>\n// </Section>\n// {/*<Section>\n//   <div>資料來源：每日頭條（github.com/canghailan）</div>\n//   <PrefecturalChina\n//     data={coronavirus}\n//   />\n// </Section>\n// <Section>\n//   <ChinaChronological\n//     data={testData}\n//   />\n// </Section>*/}\n","/* eslint-disable comma-dangle */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\n// import fetchSpreadSheet from './utils/fetchSpreadSheetv2';\n//\n// fetchSpreadSheet((data) => {\n//   console.log(data);\n// })\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}